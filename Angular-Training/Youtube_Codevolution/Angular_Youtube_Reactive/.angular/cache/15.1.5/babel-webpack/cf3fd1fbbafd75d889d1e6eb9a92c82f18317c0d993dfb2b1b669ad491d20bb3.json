{"ast":null,"code":"export function forbiddenNameValidator(forbiddenName) {\n  return control => {\n    const forbidden = forbiddenName.test(control.value);\n    return forbidden ? {\n      forbiddenName: {\n        value: control.value\n      }\n    } : null;\n  };\n}","map":{"version":3,"mappings":"AAGA,OAAM,SAAUA,sBAAsB,CAACC,aAAsB;EAC1D,OAASC,OAAyB,IAAmC;IAChE,MAAMC,SAAS,GAAGF,aAAa,CAACG,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC;IACnD,OAAOF,SAAS,GAAG;MAACF,aAAa,EAAG;QAACI,KAAK,EAAGH,OAAO,CAACG;MAAK;IAAC,CAAC,GAAG,IAAI;EACxE,CAAC;AACJ","names":["forbiddenNameValidator","forbiddenName","control","forbidden","test","value"],"sourceRoot":"","sources":["C:\\Tech_Training\\Angular - Training\\Angular_Youtube_Reactive\\src\\app\\shared\\user-name.validator.ts"],"sourcesContent":["import { AbstractControl, ValidatorFn } from \"@angular/forms\";\r\n\r\n\r\nexport function forbiddenNameValidator(forbiddenName : RegExp) : ValidatorFn {\r\n   return  (control : AbstractControl) : {[key: string] : any} | null => {\r\n        const forbidden = forbiddenName.test(control.value);\r\n        return forbidden ? {forbiddenName : {value : control.value}} : null;\r\n   }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}